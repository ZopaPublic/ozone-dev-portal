{
	"info": {
		"_postman_id": "56c7471c-208d-4500-b156-762818058f72",
		"name": "UK OBIE-V4.0(2024.12.02-0958)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27338747"
	},
	"item": [
		{
			"name": "Open Banking Sequences",
			"item": [
				{
					"name": "OBIE-V4.0",
					"item": [
						{
							"name": "AIS Flow - UI",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST  account-access-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permissions\": [\r\n            \"ReadAccountsBasic\",\r\n            \"ReadAccountsDetail\",\r\n            \"ReadBalances\",\r\n            \"ReadBeneficiariesBasic\",\r\n            \"ReadBeneficiariesDetail\",\r\n            \"ReadDirectDebits\",\r\n            \"ReadTransactionsBasic\",\r\n            \"ReadTransactionsCredits\",\r\n            \"ReadTransactionsDebits\",\r\n            \"ReadTransactionsDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadStatementsDetail\",\r\n            \"ReadParty\",\r\n            \"ReadPartyPSU\",\r\n            \"ReadOffers\",\r\n            \"ReadScheduledPaymentsBasic\",\r\n            \"ReadScheduledPaymentsDetail\"\r\n        ],\r\n        \"TransactionFromDateTime\": \"2016-01-01T10:40:00.415Z\",\r\n        \"TransactionToDateTime\": \"2025-12-31T10:40:00.415Z\"\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "responseType",
													"value": "code",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "ab7e7b18-6833-4de1-9e3a-c1b869333116",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-id\", jsonData.Data.Account[0].AccountId);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET accounts/{AccountId}/party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET account/{accountId}/statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"statement-id\", jsonData.Data.Statement[0].StatementId);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: DELETE account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"",
											"if (!pm.environment.get('obieAccountDerefSchema1')) {",
											"    var options = {",
											"        method: 'POST',",
											"        url: \"https://slack-newman.dev.ozoneapi.co.uk/getDeRefSchema\",",
											"        body: {",
											"            mode: \"raw\",",
											"            raw: JSON.stringify({ \"url\": \"https://api.github.com/repos/ozoneapi/monorepo2/contents/src/api-sets/ob-api-3.1.11/swagger/de-obi-3.1.11-account-info-swagger.json?ref=feature/rc-2024.28.2\" })",
											"        },",
											"        header: {",
											"            'Content-Type': 'application/json'",
											"        }",
											"    };",
											"",
											"    pm.sendRequest(",
											"        options,",
											"        function (err, response) {",
											"            if (err) {",
											"                pm.expect.fail('Error while fetching schema deref file');",
											"            }",
											"            const schemaJson = (response.json());",
											"            pm.environment.set('obieAccountDerefSchema1', schemaJson);",
											"        }",
											"    );",
											"}",
											"",
											"obieTest = {",
											"",
											"    statusTest: function (that, testCaseNo, statuscode, endpoint, method, contentType) {",
											"        pm.test(`Test Case ${testCaseNo} : Checking response status code  for ${statuscode}`, function () {",
											"            that.pm.response.to.have.status(statuscode);",
											"",
											"            pm.test(\"Schema is valid\", function () {",
											"                const schemaJson = pm.environment.get('obieAccountDerefSchema1');",
											"                const schema = schemaJson.paths[endpoint][method]?.responses[statuscode]?.content[contentType]?.schema;",
											"",
											"                var Ajv = require('ajv');",
											"                ajv = new Ajv({ unknownFormats: ['int32'], allErrors: true });",
											"",
											"                pm.expect(schema, \"Schema is not defined\").to.be.not.undefined;",
											"                pm.expect(ajv.validate(schema, that.pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
											"",
											"            });",
											"        });",
											"",
											"        pm.test('Verify required headers are present', function () {",
											"            const schemaJson = pm.environment.get('obieAccountDerefSchema1');",
											"            const requiredHeaders = schemaJson.paths[endpoint][method]?.responses[statuscode]?.headers;",
											"            const responseHeaders = that.pm.response.headers.toObject();",
											"            // Check if each required header is present in the response headers",
											"            Object.keys(requiredHeaders).forEach(function (key) {",
											"                pm.expect(responseHeaders).to.have.property(key);",
											"                pm.expect(responseHeaders[key]).to.be.a('string');",
											"                pm.expect(responseHeaders[key]).not.equal(\"undefined\");",
											"            });",
											"        });",
											"",
											"        pm.test(\"Response time is less than 750ms\", function () {",
											"            pm.expect(that.pm.response.responseTime).to.be.below(750);",
											"        });",
											"",
											"    }",
											"}",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var tenant = 'ZOPA';",
					"",
					"const usersByBank = {",
					"    ZOPA: [{",
					"        psuIdentifiers: {",
					"            userId: \"100001000000000000000002\"",
					"",
					"        },",
					"",
					"        accountIds: [",
					"            \"100004000000000000000002\"",
					"            // \"100004000000000000000003\",",
					"            // \"100004000000000000000004\",",
					"            // \"100004000000000000000005\",",
					"        ]",
					"    }],",
					"",
					"}",
					"const userDetails = usersByBank[tenant][0];",
					"",
					"pm.environment.set('userId', userDetails.psuIdentifiers.userId);",
					"pm.environment.set('accountIds', JSON.stringify(userDetails.accountIds));",
					"pm.environment.set('accountIdsPayment', JSON.stringify(userDetails.accountIds[0]));",
					"",
					"// const mesgSigning = {",
					"//     header: {",
					"//         'content-type': 'application/json',",
					"//         'kid': 'R5TEKOohqs9BFiv4juOs17APwCo',",
					"//         'iss': '0015800001041RHAAY/HQuZPIt3ipkh33Uxytox1E',",
					"//         'tan': 'openbanking.org.uk',",
					"//         'key': '-----BEGIN PRIVATE KEY-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDO0ABGL32XIvzwQzMfZX6AVQeAfz+VQ42CGs8Cv0+ohpsGTz8AlQ7oM/kLj7sUE4Bvk+7Dc7R9FNeyy5srXfwx4X1YxkA82QAx8YaZI8Vr4ZJJknzgSUOX4MLpSWdB4Qs5ASKStDBAVmN7Jgunj+ucI3MGMN+AubaIdAVhEET2MOfbRcem1IY5kmvNEzg53ZN78ER4z3E6zbZLqYIKJD+UVC1h7gEiZStULjXOd8XmDSAuUeii2GQlkS3th1ol5YOm2oMeLpVblDumhANd29tjc5uGxVRP6tpz9eHnQPaCj71j+qLLlhwRJiklCnvMkFUV5HP26VWeX6lSVcIpsQIZAgMBAAECggEAUy7mbVR8t2WjRyBAV8iC8StCMTT9ZhQdvs75pKk+aRJ7GDaXqKxLqqn86eGN5a1SY46k4oiPeCACAjBS4UaUQZvoxuQ2wkKmCXCUKtRwe8vnAyCgibXuMhB9VUfo+F6EHRGPzmIbZkVZDhdnaKZCpjK7+Sl/PE92U7wWzcu1cS/RHOyHqLI6Yi7ZJkAxQqTUiSiYSJVwTu9tLVm5EbYmTF48V/CBnegIVVYyfc8/6Hev4e8V/feT9of8PaJGWLKT2/rngUjefcPu7DnOsGZSmpCY9iYBY2mJZorlFIp0TGBaSjLB58kxIVE8bPUmlnYpArxnBtVVTX8qXvRRZqDcAQKBgQD04XMsG+L2F4Ta79TNoUmDWI37ocO+7HSt1aGrWewvrsXRrqgp9ba6SxwUabStSPnAC5R4GPNc5CZFfze4ZuEczkcCMJos3GhCQ2/NQnqwE7J7fZBumtM9Xc/i9AMrtiMu7L+LWExPlf6dwx7iHH3HAhuZPpMQZueG1VhsAY6ZCQKBgQDYNAm5tvo8GoE4FrlVDCCKcoD1nm3kdBwA9MJlYL8D/DLUELDjE7nNSHujzVITBbuUGM4k+LWJ9E6to9s1VbvKsjUmX9z53+BpG9OyjOszidaIx2kIu77XRzV/2V+8b8SsgiL3fl5NChZlaG5m11baSS9khFFV5K6tRF0hEEK0kQKBgBzyZY3qQfr7Lr4+qXYhQbJgDnCXX686/lPqM/EwcQX17/ZoYgKLxCzjYg9bq3rsbHFyLPvBX0s0wP1oG2sV5jhkfepZWnBBIaXrmNS3rg8QVQHaBu+8J4pSg5d9Zr6NCj2qyL2tE2A5B98YSJdL7OZQbni/99xxfZ7nq0shJ/0ZAoGALFWndOTXtYF95AGM6aq99YX7eeKOCF3i7DNEtcM8CFYsGh5+F2KRJE5rxDAzV2FCkODxTNWPbIWjqKnEJtC43Jzkl0TrLHZDL2qcY63QAVaPnqa9nCPbw4t/pgLuRdbpjrJ09yl7rvKVmx/qG76mucZuKH+VqjZlt3QgYMpT03ECgYEAnp+T1neN7D0s/G/eG30WFxq0H2SskETJABm4e1Ol6vOfnlvHlZSnYgxGqV7z2QzC3APwHNcGK8GURvzgMpzbYhTkQUCPehbLi941KRf7BDKMVYem1yTJ0yUT/TNzmXcxnsVy/36T3mS/AZp4iMlw45coQmKc3skM9S6Oe7a+XyQ=-----END PRIVATE KEY-----'",
					"//     }",
					"// }",
					"const msgSign = {",
					"    header: {",
					"        'content-type': 'application/json',",
					"        'kid': 'fckfXBdfvYRfdya5St8lVIOkP2c',",
					"        'iss': '0015800001041RHAAY/HQuZPIt3ipkh33Uxytox1E',",
					"        'tan': 'openbanking.org.uk',",
					"        'key': '-----BEGIN PRIVATE KEY-----MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPWarD3rhEKuFxmpFGb7B7Cl2KH1Vz7gKyNX2X0T7EJ3b9NL9BTmDuH53G+KQ8QdwQWkMldCClBr+s76TA5J9qS2F2dXv+pxbNLf/Jab4mgl8bTMVVyDA5AtU1GZGkJKaKRUl8/mVDyQSy//PibL45BMUfNY76yr1u+fzQCPm2wSuZ1JME6OsSitOxRNvJPKCeqFZQFTFYlbO07Dwxzl22jtIqKbShEwTSXRIaAGONak22CKNCfJdaSL1VAk+dk2DDXH7sDdAIBVfl3hA9yzrQY/n2ULN9FOYf4qbm48T8bJ8F53vksKCFgO38J2olA9P8cZ4U7AR3N7CN0SKd/RZBAgMBAAECggEBAIOu6ZFtX88DAJwaUsrN4eGySoeOsMFoVdQBvpptLBR9D8ds+U2rTknMUHJttDgEh5LnEB+4KYdEyvQ0WYibaVajOul1YWLvkL6LyReMDVP9lhMLZYO+GEoMr4UCkQkSsaW8rRgxo/QxtMdNYADbmM8zZVEVvZEusrHJF7KzEIvr6p1xTZ+SuKZwIXgTXcqTVBNCkABvvmOohq14viH+RO098kBOus/TzZ4GORFESjBVkKuMO1YjMbvbBRKZWCp6UsraJblaYFN1bb4LquEJCfgRp0ohmu3SYnKBwTPpa1MWfxVM+avCDdcfGthXvoIyiCMun+WwDdZ4mrRuQ1sH+vECgYEA+JTCPW79bOtHe6En7Q+et6zHiJy0XCIc4VaNXJagPPZZBu8wuO07Nqg8KdFfRM9njH+M+YrvGWQmiEoTmMhdDZGHi8noO9mg2S56lCbMzQ5GbOTFFK2WHSHXHx6xWMnMJagb57bbmdyt9fltF83TryjkzsNJ+c5lWklatrUKF2UCgYEA1YnkJ3ZEHH2tGbSY3usDQG99pVPFz4brA6xJHVSapvA60OTFI0wss4baGXZHKaZZsgg3wNqT8eilhRKFGewiDOveFhEHVm3FdDuKeYhut3ZBJ83Ws7uTxRGgtMOyawnONCv64mS8P0USW8kEl77zaMzKtd19I9488+3d0qy7O60CgYEAoJGOqpowDxQnd39Qx/tn/aMYvHDkvAK4/wGmjGErnlVOioEkyr9KmXKwch6xWERU0dduW57X9WHQ1gZrhCwgl2wizzQb09Uu5jr0qRArCGWpLhvUBhhet/CtAYgU7JJlUQm3BMUEMu3uXM3CHzcv/pv+uGRDO56Lr3dkplJo81UCgYB5/LcQ8BgC6qy7lZcLKdiGs+pkSxIi9uFFDOQL1Gww1+XRtg8ElhynRm9Lwmzu1zBAaz9mdbe0p4H/HlBZObNODGSn2HyHnFgDiYwW16DgP7cDBS0VKiBFoUdcXLuNOGHLHiDJumBsCIpvUsvD4HrvMKbQ9EHr/qZ1dzqUgsbHVQKBgD8tlLcppvHITJ1WexuW6wD5wm9uOuVzQplhl2WbThzfYPZ703NPeFD+dSHIo+Qq8RgLQgHCAWeJl7Us8DwyWTnwxbTfuRFdXBCWioMGH/gYPGmBj+Kep9VYLwFLFmCsh+dXP+DSGSX+wc3JqgLONeUsx09w2bNZSM0lY7DNwurX-----END PRIVATE KEY-----'",
					"    }",
					"}",
					"pm.environment.set('msgSign', JSON.stringify(msgSign));",
					"",
					"// Used by the message signing POSTs",
					"pm.environment.set(\"randomString-1\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
					"pm.environment.set(\"randomString-2\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
					"pm.environment.set(\"randomPrice\", pm.variables.replaceIn(\"{{$randomPrice}}\"));",
					"pm.environment.set(\"randomBankAccount\", pm.variables.replaceIn(\"{{$randomBankAccount}}\"));",
					"pm.environment.set(\"randomFullName\", pm.variables.replaceIn(\"{{$randomFullName}}\"));",
					"pm.environment.set(\"randomCompanyName\", pm.variables.replaceIn(\"{{$randomCompanyName}}\"));",
					"pm.environment.set(\"randomLoremWords\", pm.variables.replaceIn(\"{{$randomLoremWords}}\"));",
					"pm.environment.set(\"randomTransactionType\", pm.variables.replaceIn(\"{{$randomTransactionType}}\"));",
					"pm.environment.set(\"randomLoremWords\", pm.variables.replaceIn(\"{{$randomLoremWords}}\"));",
					"pm.environment.set(\"randomCreditCardMask\", pm.variables.replaceIn(\"{{$randomCreditCardMask}}\"));",
					"pm.environment.set(\"randomDateFuture\", (new Date(+(new Date()) + Math.floor(Math.random() * 10000000000))).toISOString());",
					"",
					"",
					"// pm.environment.set('mesgSigning', JSON.stringify(mesgSigning));",
					"",
					"var validateResponseHeaders = () => {",
					"    /*validate response header*/",
					"    pm.test(\"Validate response header \", function () {",
					"        pm.response.to.have.header(\"Date\");",
					"        pm.response.to.have.header(\"Content-Type\");",
					"        pm.response.to.have.header(\"Content-Length\");",
					"        pm.response.to.have.header(\"Connection\");",
					"        pm.response.to.have.header(\"x-fapi-interaction-id\");",
					"        pm.response.to.have.header(\"o3-interaction-id\");",
					"        pm.response.to.have.header(\"ETag\");",
					"        pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
					"        pm.expect(pm.response.headers.get('Content-Length')).to.be.a(\"string\");",
					"        pm.expect(pm.response.headers.get('x-fapi-interaction-id')).to.be.a(\"string\");",
					"        pm.expect(pm.response.headers.get('o3-interaction-id')).to.be.a(\"string\");",
					"        pm.response.to.be.header(\"Connection\", \"keep-alive\");",
					"        pm.expect(pm.response.headers.get('Date')).to.be.a(\"string\");",
					"    })",
					"}",
					"",
					"var validateRequestHeaders = () => {",
					"    /*validate request header*/",
					"    pm.test(\"Validate request header \", function () {",
					"        pm.request.to.have.header(\"Accept\");",
					"        pm.request.to.have.header(\"Accept-Encoding\");",
					"        pm.request.to.have.header(\"Connection\")",
					"        pm.request.to.have.header(\"Host\");",
					"        pm.request.to.have.header(\"Content-Type\");",
					"        pm.request.to.have.header(\"x-fapi-interaction-id\");",
					"        pm.request.to.have.header(\"x-fapi-financial-id\");",
					"        pm.request.to.have.header(\"Authorization\");",
					"        pm.request.to.be.header(\"Accept\", \"*/*\");",
					"        pm.request.to.be.header(\"Accept-Encoding\", \"gzip, deflate, br\");",
					"        pm.request.to.be.header(\"Connection\", \"keep-alive\");",
					"        pm.request.to.be.header(\"Content-Type\", \"application/json\");",
					"        pm.expect(pm.request.headers.get('x-fapi-interaction-id')).not.to.be.null;",
					"        pm.expect(pm.request.headers.get('x-fapi-customer-ip-address')).not.to.be.null;",
					"        pm.expect(pm.request.headers.get('x-fapi-financial-id')).not.to.be.null;",
					"        pm.expect(pm.request.headers.get('o3-interaction-id')).not.to.be.null;",
					"        pm.expect(pm.request.headers.get('Authorization')).not.to.be.null;",
					"    });",
					"}",
					"pm.environment.set(\"validateResponseHeaders\", validateResponseHeaders.toString());",
					"pm.environment.set(\"validateRequestHeaders\", validateRequestHeaders.toString());",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}